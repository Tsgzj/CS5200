# Session [/session]
## Login [GET]
+ Request (application/json)
  + body
    {
      "username":"Divya"
      "password":"Password123"
    }
+ Response 200
  This is not secure though
  Front end can save it as cookie
  + body
    {
      "error":"nil"
      "uid":1
    }
+ Response 401
  + body
   {
      "error":"Can not varify username/password"
   }

## Logout [DELETE]
+ Request (application/json)
  + body
   {
     "uid":1
   }
+ Response 200
  + body
   {
     "error":"nil"
   }

# User [/user]
## Get user info[GET]
+ Request (application/json)
  + body
    {
      "uid":1
    }
+ Response 200
  + body
    {
      "error":"nil"
      "Username":"Divya"
      "Contact":[
        {"Contact":xxxx}
      ]
      "Payment":[
        {
          "CardNumber":123456789012
          "Address":"360 Huntington Ave"
          "ExpirationDate":11/04/2016
          "Type":"Visa"
        }
      ]
      "BillingAddress":[
        {
          "Street":"360 Huntington Ave"
          "City":"BOSTON"
          "State":"MA"
          "ZipCode":02115
        }
      ]
      "ShippingAddress":[
        {
          "Street":"360 Huntington Ave"
          "City":"BOSTON"
          "State":"MA"
          "ZipCode":02115
        }
      ]
      "Order":[
        {
          "Orderid":1
        }
        {
          "Orderid":2
        }
      ]
    }
+ Response 400
  + body
    {
      "error":"Cannot find user info"
    }
## Create user[POST]
This is optional since we don't have sign up use case
I'll leave it blank for now
## Delete user[DELETE]
Same as create user


# User Payment Info [/user/payment]
## Get user payment info [GET]
+ Request (application/json)
  + body
    {
      "uid":1
    }
+ Response 200
  + body
    {
      "Payment":[
        "CardNumber":123456789012
        "Address":"360 Huntington Ave"
        "ExpirationDate":11/04/2016
        "Type":"Visa"
      ]
    }
## Updating [POST]

# Inventory [/inventory]
## Get inventory info[GET]
+ Request (application/json)
  + body
    {
      "Title":"Keyboard"
    }
+ Response 200
  + body
    {
      "Inventory":[
        {
          "InventoryId":1
          "error":"nil"
          "Title":"Keyboard"
          "Description":""
          "Price":100.00
          "Discount":0.95
          "Categoty":"Electronics"
          "Available":5
        }
      ]
    }
+ Response 400
  + body
    {
      "error":"Cannot find inventory"
    }

## Add one inventory [POST]
This is done by inventory manager
So first need to verify identity
We just use uid here which is insecure
+ Request (application/json)
  + body
   {
     "uid":2
     "InventoryId":2
     "Title":"Mouse"
     "Description":""
     "Price":68.00
     "Discount":1.00
     "Categoty":"Electronics"
     "Available":15
   }
+ Response 200
  + body
    {
      "error":"nil"
    }
+ Response 401
  + body
    {
      "error":"Cannot verify identity"
    }
+ Response 400
  + body
    {
      "error":Database error
    }

# Shopping Cart [/shoppingcart]
Allow user to view and edit his shopping cart
## View customers shopping cart [GET]
+ Request (application/json)
  + body
    {
      "uid":1
    }
+ Response 200
  + body
    {
      "error":"nil"
      "item":[
        {
          "InventoryId":2
          "Title":"Mouse"
          "Description":""
          "Price":68.00
          "Discount":1.00
          "Categoty":"Electronics"
          "Available":15
          "Quantity":2
        }
        {
          "InventoryId":3
          "Title":"Lamp"
          "Description":""
          "Price":99.00
          "Discount":1.00
          "Categoty":"Home"
          "Available":12
          "Quantity":1
        }
      ]
    }
+ Response 401
  + body
    {
      "error":"Cannot verify identity"
    }
## Update shopping cart [POST]
+ Request (application/json)
  + body
   {
     "uid":1
     "InventoryId":1
     "Quantity":3
   }
+ Response 200
  + body
    {
      "error":"nil"
    }
+ Response 401
  + body
    {
      "error":"Cannot verify identity"
    }
## Delete shopping cart [DELETE]
+ Request (application/json)
  + body
    {
      "uid":1
      "InventoryId":1
    }
+ Response 200
  + body
    {
      "error":"nil"
    }
+ Response 401
  + body
    {
      "error":"Cannot verify identity"
    }

# Order [/order]
## View detail [GET]
+ Request (application/json)
  + body
    {
      "uid":1
      "OrderId":1
     }
## Checkout [POST]
+ Response 200
  will have the order id

# Category [/category]
## Search by categoty[GET]
+ Request (application/json)
  + body
    {
      "Category":"Electronics"
    }
+ Response 200
  + body
    {
      "error":"nil"
      "Inventory":[
        {
          "InventoryId":2
          "Title":"Mouse"
          "Description":""
          "Price":68.00
          "Discount":1.00
          "Category":"Electronics"
          "Available":15
        }
        {
          "InventoryId":1
          "Title":"Keyboard"
          "Description":""
          "Price":100.00
          "Discount":0.95
          "Category":"Electronics"
          "Available":5
        }
      ]
    }
